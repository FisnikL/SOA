version: "3"
services:
  python-application:
    build:
      context: ./python-application
    container_name: python-application
    image: python-application
    ports:
      - "81:80"
    volumes:
      - ./python-application:/code
      - ./volumes/python-application_logs/logFile.log:/etc/logFile.log
    links:
      - logstash
      - elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    container_name: elasticsearch
    environment:
      - ELASTIC_PASSWORD="changeme"
      - ES_JAVA_OPTS=-Xmx256m -Xms256m
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - http.cors.allow-origin=*
    ports:
      - "9200:9200"
    volumes:
#      - esdata:/usr/share/elasticsearch/data
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  logstash:
    build: logstash
    container_name: logstash
    links:
      - elasticsearch
    expose:
      - "5044"
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      SERVER_PORT: "5601"
#      - server.port=127.0.0.1:5601
#      - elasticsearch.url="http://elasticsearch:9200"
#      - server.name="kibana"
##      ELASTICSEARCH_URL: http://elasticsearch:9200
##      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    links:
        - elasticsearch
  #    volumes:
  #        - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
  prometheus:
    container_name: prometheus-svc
    image: prom/prometheus
    ports:
      - "9091:9090"
    command: --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
  grafana:
    image: grafana/grafana:6.7.0
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  grafana-dashboards:
    image: alpine:3.10
    depends_on:
      - grafana
    volumes:
      - ./grafana-data:/grafana
    command: >
      /bin/sh -c "
        apk add --no-cache curl
        echo 'waiting for grafana'
        sleep 5s
        cd /grafana
        curl --request POST http://grafana:3000/api/datasources --header 'Content-Type: application/json' -d @datasources.json
        curl --request POST http://grafana:3000/api/dashboards/db --header 'Content-Type: application/json' -d @dashboard.json"
volumes:
  esdata:
    driver: local